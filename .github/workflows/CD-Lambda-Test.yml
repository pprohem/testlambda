name: Continuous Deployment to AWS Lambda

on:
  push:
    branches:
      - main  # ajuste de acordo com a sua branch principal
  workflow_dispatch:  

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci  # ou `npm install` dependendo da sua configuração

    - name: Create function.zip
      run: zip -r function.zip . -x "node_modules/*" ".git/*"

    - name: Upload function.zip as artifact
      uses: actions/upload-artifact@v2
      with:
        name: function-zip
        path: function.zip

    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID_ROHEM }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY_ROHEM }}
        aws configure set default.region us-east-2  # ajuste para a sua região

    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
        aws --version

    - name: Deploy to AWS Lambda
      run: |
        aws lambda update-function-code --function-name function-test-2 \
          --zip-file fileb://function.zip



# name: Deploy

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     name: deploy
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [20.x]
#     steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#     - run: npm ci
#     - name: serverless deploy
#       uses: serverless/github-action@v3.2
#       with:
#         args: deploy
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_ROHEM }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ROHEM }}